// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xledger.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protos "github.com/xuperchain/xupercore/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TransactionStatus is the status of transaction
type TransactionStatus int32

const (
	// Undefined status
	TransactionStatus_UNDEFINE TransactionStatus = 0
	// Transaction not exist
	TransactionStatus_NOEXIST TransactionStatus = 1
	// Transaction have been confirmed
	TransactionStatus_CONFIRM TransactionStatus = 2
	// Transaction is on the furcation
	TransactionStatus_FURCATION TransactionStatus = 3
	// Transaction have not been confirmed
	TransactionStatus_UNCONFIRM TransactionStatus = 4
	// Transaction occurs error
	TransactionStatus_FAILED TransactionStatus = 5
)

var TransactionStatus_name = map[int32]string{
	0: "UNDEFINE",
	1: "NOEXIST",
	2: "CONFIRM",
	3: "FURCATION",
	4: "UNCONFIRM",
	5: "FAILED",
}

var TransactionStatus_value = map[string]int32{
	"UNDEFINE":  0,
	"NOEXIST":   1,
	"CONFIRM":   2,
	"FURCATION": 3,
	"UNCONFIRM": 4,
	"FAILED":    5,
}

func (x TransactionStatus) String() string {
	return proto.EnumName(TransactionStatus_name, int32(x))
}

func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{0}
}

// QCState is the phase of hotstuff
type QCState int32

const (
	QCState_NEW_VIEW   QCState = 0
	QCState_PREPARE    QCState = 1
	QCState_PRE_COMMIT QCState = 2
	QCState_COMMIT     QCState = 3
	QCState_DECIDE     QCState = 4
)

var QCState_name = map[int32]string{
	0: "NEW_VIEW",
	1: "PREPARE",
	2: "PRE_COMMIT",
	3: "COMMIT",
	4: "DECIDE",
}

var QCState_value = map[string]int32{
	"NEW_VIEW":   0,
	"PREPARE":    1,
	"PRE_COMMIT": 2,
	"COMMIT":     3,
	"DECIDE":     4,
}

func (x QCState) String() string {
	return proto.EnumName(QCState_name, int32(x))
}

func (QCState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{1}
}

// QCSignInfos is the signs of the leader gathered from replicas of a specifically certType.
// A slice of signs is used at present.
// TODO @qizheng09: It will be change to Threshold-Signatures after
// Crypto lib support Threshold-Signatures.
type QCSignInfos struct {
	// QCSignInfos
	QCSignInfos          []*SignInfo `protobuf:"bytes,1,rep,name=QCSignInfos,proto3" json:"QCSignInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *QCSignInfos) Reset()         { *m = QCSignInfos{} }
func (m *QCSignInfos) String() string { return proto.CompactTextString(m) }
func (*QCSignInfos) ProtoMessage()    {}
func (*QCSignInfos) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{0}
}

func (m *QCSignInfos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QCSignInfos.Unmarshal(m, b)
}
func (m *QCSignInfos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QCSignInfos.Marshal(b, m, deterministic)
}
func (m *QCSignInfos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QCSignInfos.Merge(m, src)
}
func (m *QCSignInfos) XXX_Size() int {
	return xxx_messageInfo_QCSignInfos.Size(m)
}
func (m *QCSignInfos) XXX_DiscardUnknown() {
	xxx_messageInfo_QCSignInfos.DiscardUnknown(m)
}

var xxx_messageInfo_QCSignInfos proto.InternalMessageInfo

func (m *QCSignInfos) GetQCSignInfos() []*SignInfo {
	if m != nil {
		return m.QCSignInfos
	}
	return nil
}

// SignInfo is the signature information of the
type SignInfo struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Sign                 []byte   `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInfo) Reset()         { *m = SignInfo{} }
func (m *SignInfo) String() string { return proto.CompactTextString(m) }
func (*SignInfo) ProtoMessage()    {}
func (*SignInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{1}
}

func (m *SignInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInfo.Unmarshal(m, b)
}
func (m *SignInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInfo.Marshal(b, m, deterministic)
}
func (m *SignInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInfo.Merge(m, src)
}
func (m *SignInfo) XXX_Size() int {
	return xxx_messageInfo_SignInfo.Size(m)
}
func (m *SignInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignInfo proto.InternalMessageInfo

func (m *SignInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SignInfo) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *SignInfo) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// QuorumCert is a data type that combines a collection of signatures from replicas.
type QuorumCert struct {
	// The id of Proposal this QC certified.
	ProposalId []byte `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	// The msg of Proposal this QC certified.
	ProposalMsg []byte `protobuf:"bytes,2,opt,name=ProposalMsg,proto3" json:"ProposalMsg,omitempty"`
	// The current type of this QC certified.
	// the type contains `NEW_VIEW`, `PREPARE`
	Type QCState `protobuf:"varint,3,opt,name=Type,proto3,enum=pb.QCState" json:"Type,omitempty"`
	// The view number of this QC certified.
	ViewNumber int64 `protobuf:"varint,4,opt,name=ViewNumber,proto3" json:"ViewNumber,omitempty"`
	// SignInfos is the signs of the leader gathered from replicas
	// of a specifically certType.
	SignInfos            *QCSignInfos `protobuf:"bytes,5,opt,name=SignInfos,proto3" json:"SignInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QuorumCert) Reset()         { *m = QuorumCert{} }
func (m *QuorumCert) String() string { return proto.CompactTextString(m) }
func (*QuorumCert) ProtoMessage()    {}
func (*QuorumCert) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{2}
}

func (m *QuorumCert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuorumCert.Unmarshal(m, b)
}
func (m *QuorumCert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuorumCert.Marshal(b, m, deterministic)
}
func (m *QuorumCert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumCert.Merge(m, src)
}
func (m *QuorumCert) XXX_Size() int {
	return xxx_messageInfo_QuorumCert.Size(m)
}
func (m *QuorumCert) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumCert.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumCert proto.InternalMessageInfo

func (m *QuorumCert) GetProposalId() []byte {
	if m != nil {
		return m.ProposalId
	}
	return nil
}

func (m *QuorumCert) GetProposalMsg() []byte {
	if m != nil {
		return m.ProposalMsg
	}
	return nil
}

func (m *QuorumCert) GetType() QCState {
	if m != nil {
		return m.Type
	}
	return QCState_NEW_VIEW
}

func (m *QuorumCert) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *QuorumCert) GetSignInfos() *QCSignInfos {
	if m != nil {
		return m.SignInfos
	}
	return nil
}

type HDInfo struct {
	// HDPublickey
	HdPublicKey []byte `protobuf:"bytes,1,opt,name=hd_public_key,json=hdPublicKey,proto3" json:"hd_public_key,omitempty"`
	// original_hash
	OriginalHash         []byte   `protobuf:"bytes,2,opt,name=original_hash,json=originalHash,proto3" json:"original_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HDInfo) Reset()         { *m = HDInfo{} }
func (m *HDInfo) String() string { return proto.CompactTextString(m) }
func (*HDInfo) ProtoMessage()    {}
func (*HDInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{3}
}

func (m *HDInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HDInfo.Unmarshal(m, b)
}
func (m *HDInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HDInfo.Marshal(b, m, deterministic)
}
func (m *HDInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HDInfo.Merge(m, src)
}
func (m *HDInfo) XXX_Size() int {
	return xxx_messageInfo_HDInfo.Size(m)
}
func (m *HDInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HDInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HDInfo proto.InternalMessageInfo

func (m *HDInfo) GetHdPublicKey() []byte {
	if m != nil {
		return m.HdPublicKey
	}
	return nil
}

func (m *HDInfo) GetOriginalHash() []byte {
	if m != nil {
		return m.OriginalHash
	}
	return nil
}

// 签名详情
type SignatureInfo struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Sign                 []byte   `protobuf:"bytes,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureInfo) Reset()         { *m = SignatureInfo{} }
func (m *SignatureInfo) String() string { return proto.CompactTextString(m) }
func (*SignatureInfo) ProtoMessage()    {}
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{4}
}

func (m *SignatureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureInfo.Unmarshal(m, b)
}
func (m *SignatureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureInfo.Marshal(b, m, deterministic)
}
func (m *SignatureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureInfo.Merge(m, src)
}
func (m *SignatureInfo) XXX_Size() int {
	return xxx_messageInfo_SignatureInfo.Size(m)
}
func (m *SignatureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureInfo proto.InternalMessageInfo

func (m *SignatureInfo) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *SignatureInfo) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// Unified Xuper Signature
type XuperSignature struct {
	PublicKeys           [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XuperSignature) Reset()         { *m = XuperSignature{} }
func (m *XuperSignature) String() string { return proto.CompactTextString(m) }
func (*XuperSignature) ProtoMessage()    {}
func (*XuperSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{5}
}

func (m *XuperSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XuperSignature.Unmarshal(m, b)
}
func (m *XuperSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XuperSignature.Marshal(b, m, deterministic)
}
func (m *XuperSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XuperSignature.Merge(m, src)
}
func (m *XuperSignature) XXX_Size() int {
	return xxx_messageInfo_XuperSignature.Size(m)
}
func (m *XuperSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_XuperSignature.DiscardUnknown(m)
}

var xxx_messageInfo_XuperSignature proto.InternalMessageInfo

func (m *XuperSignature) GetPublicKeys() [][]byte {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

func (m *XuperSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Transaction is the information of the transaction
type Transaction struct {
	// txid is the id of this transaction
	Txid []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	// the blockid the transaction belong to
	Blockid []byte `protobuf:"bytes,2,opt,name=blockid,proto3" json:"blockid,omitempty"`
	// Transaction input list
	TxInputs []*protos.TxInput `protobuf:"bytes,3,rep,name=tx_inputs,json=txInputs,proto3" json:"tx_inputs,omitempty"`
	// Transaction output list
	TxOutputs []*protos.TxOutput `protobuf:"bytes,4,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	// Transaction description or system contract
	Desc []byte `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	// Mining rewards
	Coinbase bool `protobuf:"varint,7,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	// Random number used to avoid replay attacks
	Nonce string `protobuf:"bytes,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Timestamp to launch the transaction
	Timestamp int64 `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// tx format version; tx格式版本号
	Version int32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	// auto generated tx
	Autogen          bool                    `protobuf:"varint,11,opt,name=autogen,proto3" json:"autogen,omitempty"`
	TxInputsExt      []*protos.TxInputExt    `protobuf:"bytes,23,rep,name=tx_inputs_ext,json=txInputsExt,proto3" json:"tx_inputs_ext,omitempty"`
	TxOutputsExt     []*protos.TxOutputExt   `protobuf:"bytes,24,rep,name=tx_outputs_ext,json=txOutputsExt,proto3" json:"tx_outputs_ext,omitempty"`
	ContractRequests []*protos.InvokeRequest `protobuf:"bytes,25,rep,name=contract_requests,json=contractRequests,proto3" json:"contract_requests,omitempty"`
	// 权限系统新增字段
	// 交易发起者, 可以是一个Address或者一个Account
	Initiator string `protobuf:"bytes,26,opt,name=initiator,proto3" json:"initiator,omitempty"`
	// 交易发起需要被收集签名的AddressURL集合信息，包括用于utxo转账和用于合约调用
	AuthRequire []string `protobuf:"bytes,27,rep,name=auth_require,json=authRequire,proto3" json:"auth_require,omitempty"`
	// 交易发起者对交易元数据签名，签名的内容包括auth_require字段
	InitiatorSigns []*SignatureInfo `protobuf:"bytes,28,rep,name=initiator_signs,json=initiatorSigns,proto3" json:"initiator_signs,omitempty"`
	// 收集到的签名
	AuthRequireSigns []*SignatureInfo `protobuf:"bytes,29,rep,name=auth_require_signs,json=authRequireSigns,proto3" json:"auth_require_signs,omitempty"`
	// 节点收到tx的时间戳，不参与签名
	ReceivedTimestamp int64 `protobuf:"varint,30,opt,name=received_timestamp,json=receivedTimestamp,proto3" json:"received_timestamp,omitempty"`
	// 统一签名(支持多重签名/环签名等，与initiator_signs/auth_require_signs不同时使用)
	XuperSign *XuperSignature `protobuf:"bytes,31,opt,name=xuper_sign,json=xuperSign,proto3" json:"xuper_sign,omitempty"`
	// 可修改区块链标记
	ModifyBlock *ModifyBlock `protobuf:"bytes,32,opt,name=modify_block,json=modifyBlock,proto3" json:"modify_block,omitempty"`
	// HD加解密相关信息
	HDInfo               *HDInfo  `protobuf:"bytes,33,opt,name=HD_info,json=HDInfo,proto3" json:"HD_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{6}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *Transaction) GetBlockid() []byte {
	if m != nil {
		return m.Blockid
	}
	return nil
}

func (m *Transaction) GetTxInputs() []*protos.TxInput {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *Transaction) GetTxOutputs() []*protos.TxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

func (m *Transaction) GetDesc() []byte {
	if m != nil {
		return m.Desc
	}
	return nil
}

func (m *Transaction) GetCoinbase() bool {
	if m != nil {
		return m.Coinbase
	}
	return false
}

func (m *Transaction) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Transaction) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Transaction) GetAutogen() bool {
	if m != nil {
		return m.Autogen
	}
	return false
}

func (m *Transaction) GetTxInputsExt() []*protos.TxInputExt {
	if m != nil {
		return m.TxInputsExt
	}
	return nil
}

func (m *Transaction) GetTxOutputsExt() []*protos.TxOutputExt {
	if m != nil {
		return m.TxOutputsExt
	}
	return nil
}

func (m *Transaction) GetContractRequests() []*protos.InvokeRequest {
	if m != nil {
		return m.ContractRequests
	}
	return nil
}

func (m *Transaction) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *Transaction) GetAuthRequire() []string {
	if m != nil {
		return m.AuthRequire
	}
	return nil
}

func (m *Transaction) GetInitiatorSigns() []*SignatureInfo {
	if m != nil {
		return m.InitiatorSigns
	}
	return nil
}

func (m *Transaction) GetAuthRequireSigns() []*SignatureInfo {
	if m != nil {
		return m.AuthRequireSigns
	}
	return nil
}

func (m *Transaction) GetReceivedTimestamp() int64 {
	if m != nil {
		return m.ReceivedTimestamp
	}
	return 0
}

func (m *Transaction) GetXuperSign() *XuperSignature {
	if m != nil {
		return m.XuperSign
	}
	return nil
}

func (m *Transaction) GetModifyBlock() *ModifyBlock {
	if m != nil {
		return m.ModifyBlock
	}
	return nil
}

func (m *Transaction) GetHDInfo() *HDInfo {
	if m != nil {
		return m.HDInfo
	}
	return nil
}

// Ledger metadata
type LedgerMeta struct {
	// root block id
	RootBlockid []byte `protobuf:"bytes,1,opt,name=root_blockid,json=rootBlockid,proto3" json:"root_blockid,omitempty"`
	// tip block id
	TipBlockid []byte `protobuf:"bytes,2,opt,name=tip_blockid,json=tipBlockid,proto3" json:"tip_blockid,omitempty"`
	// the height of the trunk
	TrunkHeight          int64    `protobuf:"varint,3,opt,name=trunk_height,json=trunkHeight,proto3" json:"trunk_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LedgerMeta) Reset()         { *m = LedgerMeta{} }
func (m *LedgerMeta) String() string { return proto.CompactTextString(m) }
func (*LedgerMeta) ProtoMessage()    {}
func (*LedgerMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{7}
}

func (m *LedgerMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LedgerMeta.Unmarshal(m, b)
}
func (m *LedgerMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LedgerMeta.Marshal(b, m, deterministic)
}
func (m *LedgerMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerMeta.Merge(m, src)
}
func (m *LedgerMeta) XXX_Size() int {
	return xxx_messageInfo_LedgerMeta.Size(m)
}
func (m *LedgerMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerMeta.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerMeta proto.InternalMessageInfo

func (m *LedgerMeta) GetRootBlockid() []byte {
	if m != nil {
		return m.RootBlockid
	}
	return nil
}

func (m *LedgerMeta) GetTipBlockid() []byte {
	if m != nil {
		return m.TipBlockid
	}
	return nil
}

func (m *LedgerMeta) GetTrunkHeight() int64 {
	if m != nil {
		return m.TrunkHeight
	}
	return 0
}

// Utxo metadata
type UtxoMeta struct {
	// utxo vm目前执行到的blockid
	LatestBlockid []byte   `protobuf:"bytes,1,opt,name=latest_blockid,json=latestBlockid,proto3" json:"latest_blockid,omitempty"`
	LockKeyList   []string `protobuf:"bytes,2,rep,name=lock_key_list,json=lockKeyList,proto3" json:"lock_key_list,omitempty"`
	// 当前utxo vm上的总资产
	UtxoTotal string `protobuf:"bytes,3,opt,name=utxo_total,json=utxoTotal,proto3" json:"utxo_total,omitempty"`
	// 平均上链延时
	AvgDelay int64 `protobuf:"varint,4,opt,name=avgDelay,proto3" json:"avgDelay,omitempty"`
	// 待确认交易量
	UnconfirmTxAmount int64 `protobuf:"varint,5,opt,name=unconfirmTxAmount,proto3" json:"unconfirmTxAmount,omitempty"`
	// max block size
	MaxBlockSize int64 `protobuf:"varint,6,opt,name=max_block_size,json=maxBlockSize,proto3" json:"max_block_size,omitempty"`
	// preset contracts
	ReservedContracts []*protos.InvokeRequest `protobuf:"bytes,7,rep,name=reserved_contracts,json=reservedContracts,proto3" json:"reserved_contracts,omitempty"`
	// reset forbidden contract configuration
	ForbiddenContract *protos.InvokeRequest `protobuf:"bytes,8,opt,name=forbidden_contract,json=forbiddenContract,proto3" json:"forbidden_contract,omitempty"`
	// the resource amount of creating an account
	NewAccountResourceAmount int64 `protobuf:"varint,9,opt,name=new_account_resource_amount,json=newAccountResourceAmount,proto3" json:"new_account_resource_amount,omitempty"`
	// 当前不可逆区块高度，与utxo对齐
	IrreversibleBlockHeight int64 `protobuf:"varint,10,opt,name=irreversibleBlockHeight,proto3" json:"irreversibleBlockHeight,omitempty"`
	// 当前不可逆区块高度调整窗口
	IrreversibleSlideWindow int64            `protobuf:"varint,11,opt,name=irreversibleSlideWindow,proto3" json:"irreversibleSlideWindow,omitempty"`
	GasPrice                *protos.GasPrice `protobuf:"bytes,12,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	// 群组合约相关
	GroupChainContract   *protos.InvokeRequest `protobuf:"bytes,13,opt,name=group_chain_contract,json=groupChainContract,proto3" json:"group_chain_contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UtxoMeta) Reset()         { *m = UtxoMeta{} }
func (m *UtxoMeta) String() string { return proto.CompactTextString(m) }
func (*UtxoMeta) ProtoMessage()    {}
func (*UtxoMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{8}
}

func (m *UtxoMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtxoMeta.Unmarshal(m, b)
}
func (m *UtxoMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtxoMeta.Marshal(b, m, deterministic)
}
func (m *UtxoMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtxoMeta.Merge(m, src)
}
func (m *UtxoMeta) XXX_Size() int {
	return xxx_messageInfo_UtxoMeta.Size(m)
}
func (m *UtxoMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_UtxoMeta.DiscardUnknown(m)
}

var xxx_messageInfo_UtxoMeta proto.InternalMessageInfo

func (m *UtxoMeta) GetLatestBlockid() []byte {
	if m != nil {
		return m.LatestBlockid
	}
	return nil
}

func (m *UtxoMeta) GetLockKeyList() []string {
	if m != nil {
		return m.LockKeyList
	}
	return nil
}

func (m *UtxoMeta) GetUtxoTotal() string {
	if m != nil {
		return m.UtxoTotal
	}
	return ""
}

func (m *UtxoMeta) GetAvgDelay() int64 {
	if m != nil {
		return m.AvgDelay
	}
	return 0
}

func (m *UtxoMeta) GetUnconfirmTxAmount() int64 {
	if m != nil {
		return m.UnconfirmTxAmount
	}
	return 0
}

func (m *UtxoMeta) GetMaxBlockSize() int64 {
	if m != nil {
		return m.MaxBlockSize
	}
	return 0
}

func (m *UtxoMeta) GetReservedContracts() []*protos.InvokeRequest {
	if m != nil {
		return m.ReservedContracts
	}
	return nil
}

func (m *UtxoMeta) GetForbiddenContract() *protos.InvokeRequest {
	if m != nil {
		return m.ForbiddenContract
	}
	return nil
}

func (m *UtxoMeta) GetNewAccountResourceAmount() int64 {
	if m != nil {
		return m.NewAccountResourceAmount
	}
	return 0
}

func (m *UtxoMeta) GetIrreversibleBlockHeight() int64 {
	if m != nil {
		return m.IrreversibleBlockHeight
	}
	return 0
}

func (m *UtxoMeta) GetIrreversibleSlideWindow() int64 {
	if m != nil {
		return m.IrreversibleSlideWindow
	}
	return 0
}

func (m *UtxoMeta) GetGasPrice() *protos.GasPrice {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *UtxoMeta) GetGroupChainContract() *protos.InvokeRequest {
	if m != nil {
		return m.GroupChainContract
	}
	return nil
}

// The internal block struct
type InternalBlock struct {
	// block version
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Random number used to avoid replay attacks
	Nonce int32 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// blockid generate the hash sign of the block used by sha256
	Blockid []byte `protobuf:"bytes,3,opt,name=blockid,proto3" json:"blockid,omitempty"`
	// pre_hash is the parent blockid of the block
	PreHash []byte `protobuf:"bytes,4,opt,name=pre_hash,json=preHash,proto3" json:"pre_hash,omitempty"`
	// The miner id
	Proposer []byte `protobuf:"bytes,5,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// The sign which miner signed: blockid + nonce + timestamp
	Sign []byte `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	// The pk of the miner
	Pubkey []byte `protobuf:"bytes,7,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// The Merkle Tree root
	MerkleRoot []byte `protobuf:"bytes,8,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	// The height of the blockchain
	Height int64 `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	// Timestamp of the block
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transactions of the block, only txid stored on kv, the detail information
	// stored in another table
	Transactions []*Transaction `protobuf:"bytes,11,rep,name=transactions,proto3" json:"transactions,omitempty"`
	// The transaction count of the block
	TxCount int32 `protobuf:"varint,12,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	// 所有交易hash的merkle tree
	MerkleTree  [][]byte          `protobuf:"bytes,13,rep,name=merkle_tree,json=merkleTree,proto3" json:"merkle_tree,omitempty"`
	CurTerm     int64             `protobuf:"varint,16,opt,name=curTerm,proto3" json:"curTerm,omitempty"`
	CurBlockNum int64             `protobuf:"varint,17,opt,name=curBlockNum,proto3" json:"curBlockNum,omitempty"`
	FailedTxs   map[string]string `protobuf:"bytes,18,rep,name=failed_txs,json=failedTxs,proto3" json:"failed_txs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TargetBits  int32             `protobuf:"varint,19,opt,name=targetBits,proto3" json:"targetBits,omitempty"`
	// Justify used in chained-bft
	Justify *QuorumCert `protobuf:"bytes,20,opt,name=Justify,proto3" json:"Justify,omitempty"`
	// 下面的属性会动态变化
	// If the block is on the trunk
	InTrunk bool `protobuf:"varint,14,opt,name=in_trunk,json=inTrunk,proto3" json:"in_trunk,omitempty"`
	// Next next block which on trunk
	NextHash             []byte   `protobuf:"bytes,15,opt,name=next_hash,json=nextHash,proto3" json:"next_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalBlock) Reset()         { *m = InternalBlock{} }
func (m *InternalBlock) String() string { return proto.CompactTextString(m) }
func (*InternalBlock) ProtoMessage()    {}
func (*InternalBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{9}
}

func (m *InternalBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalBlock.Unmarshal(m, b)
}
func (m *InternalBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalBlock.Marshal(b, m, deterministic)
}
func (m *InternalBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalBlock.Merge(m, src)
}
func (m *InternalBlock) XXX_Size() int {
	return xxx_messageInfo_InternalBlock.Size(m)
}
func (m *InternalBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalBlock.DiscardUnknown(m)
}

var xxx_messageInfo_InternalBlock proto.InternalMessageInfo

func (m *InternalBlock) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *InternalBlock) GetNonce() int32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *InternalBlock) GetBlockid() []byte {
	if m != nil {
		return m.Blockid
	}
	return nil
}

func (m *InternalBlock) GetPreHash() []byte {
	if m != nil {
		return m.PreHash
	}
	return nil
}

func (m *InternalBlock) GetProposer() []byte {
	if m != nil {
		return m.Proposer
	}
	return nil
}

func (m *InternalBlock) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *InternalBlock) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *InternalBlock) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *InternalBlock) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *InternalBlock) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *InternalBlock) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *InternalBlock) GetTxCount() int32 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *InternalBlock) GetMerkleTree() [][]byte {
	if m != nil {
		return m.MerkleTree
	}
	return nil
}

func (m *InternalBlock) GetCurTerm() int64 {
	if m != nil {
		return m.CurTerm
	}
	return 0
}

func (m *InternalBlock) GetCurBlockNum() int64 {
	if m != nil {
		return m.CurBlockNum
	}
	return 0
}

func (m *InternalBlock) GetFailedTxs() map[string]string {
	if m != nil {
		return m.FailedTxs
	}
	return nil
}

func (m *InternalBlock) GetTargetBits() int32 {
	if m != nil {
		return m.TargetBits
	}
	return 0
}

func (m *InternalBlock) GetJustify() *QuorumCert {
	if m != nil {
		return m.Justify
	}
	return nil
}

func (m *InternalBlock) GetInTrunk() bool {
	if m != nil {
		return m.InTrunk
	}
	return false
}

func (m *InternalBlock) GetNextHash() []byte {
	if m != nil {
		return m.NextHash
	}
	return nil
}

type Utxo struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr               []byte   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	ToPubkey             []byte   `protobuf:"bytes,3,opt,name=toPubkey,proto3" json:"toPubkey,omitempty"`
	RefTxid              []byte   `protobuf:"bytes,4,opt,name=refTxid,proto3" json:"refTxid,omitempty"`
	RefOffset            int32    `protobuf:"varint,5,opt,name=refOffset,proto3" json:"refOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Utxo) Reset()         { *m = Utxo{} }
func (m *Utxo) String() string { return proto.CompactTextString(m) }
func (*Utxo) ProtoMessage()    {}
func (*Utxo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{10}
}

func (m *Utxo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Utxo.Unmarshal(m, b)
}
func (m *Utxo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Utxo.Marshal(b, m, deterministic)
}
func (m *Utxo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Utxo.Merge(m, src)
}
func (m *Utxo) XXX_Size() int {
	return xxx_messageInfo_Utxo.Size(m)
}
func (m *Utxo) XXX_DiscardUnknown() {
	xxx_messageInfo_Utxo.DiscardUnknown(m)
}

var xxx_messageInfo_Utxo proto.InternalMessageInfo

func (m *Utxo) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Utxo) GetToAddr() []byte {
	if m != nil {
		return m.ToAddr
	}
	return nil
}

func (m *Utxo) GetToPubkey() []byte {
	if m != nil {
		return m.ToPubkey
	}
	return nil
}

func (m *Utxo) GetRefTxid() []byte {
	if m != nil {
		return m.RefTxid
	}
	return nil
}

func (m *Utxo) GetRefOffset() int32 {
	if m != nil {
		return m.RefOffset
	}
	return 0
}

type ModifyBlock struct {
	// txid交易被effective_txid的交易提出可修改区块链的请求
	EffectiveTxid string `protobuf:"bytes,1,opt,name=effective_txid,json=effectiveTxid,proto3" json:"effective_txid,omitempty"`
	// 本交易是否已被修改标记
	Marked bool `protobuf:"varint,2,opt,name=marked,proto3" json:"marked,omitempty"`
	// txid交易被修改生效的高度
	EffectiveHeight int64 `protobuf:"varint,3,opt,name=effective_height,json=effectiveHeight,proto3" json:"effective_height,omitempty"`
	// 监管的public key
	PublicKey string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// 监管地址对修改的交易id的签名
	Sign                 string   `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModifyBlock) Reset()         { *m = ModifyBlock{} }
func (m *ModifyBlock) String() string { return proto.CompactTextString(m) }
func (*ModifyBlock) ProtoMessage()    {}
func (*ModifyBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{11}
}

func (m *ModifyBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyBlock.Unmarshal(m, b)
}
func (m *ModifyBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyBlock.Marshal(b, m, deterministic)
}
func (m *ModifyBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyBlock.Merge(m, src)
}
func (m *ModifyBlock) XXX_Size() int {
	return xxx_messageInfo_ModifyBlock.Size(m)
}
func (m *ModifyBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyBlock proto.InternalMessageInfo

func (m *ModifyBlock) GetEffectiveTxid() string {
	if m != nil {
		return m.EffectiveTxid
	}
	return ""
}

func (m *ModifyBlock) GetMarked() bool {
	if m != nil {
		return m.Marked
	}
	return false
}

func (m *ModifyBlock) GetEffectiveHeight() int64 {
	if m != nil {
		return m.EffectiveHeight
	}
	return 0
}

func (m *ModifyBlock) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *ModifyBlock) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

type TxDataAccount struct {
	// 地址
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// 金额
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// 冻结高度
	FrozenHeight         int64    `protobuf:"varint,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxDataAccount) Reset()         { *m = TxDataAccount{} }
func (m *TxDataAccount) String() string { return proto.CompactTextString(m) }
func (*TxDataAccount) ProtoMessage()    {}
func (*TxDataAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2597d8d8aba161e, []int{12}
}

func (m *TxDataAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxDataAccount.Unmarshal(m, b)
}
func (m *TxDataAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxDataAccount.Marshal(b, m, deterministic)
}
func (m *TxDataAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxDataAccount.Merge(m, src)
}
func (m *TxDataAccount) XXX_Size() int {
	return xxx_messageInfo_TxDataAccount.Size(m)
}
func (m *TxDataAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_TxDataAccount.DiscardUnknown(m)
}

var xxx_messageInfo_TxDataAccount proto.InternalMessageInfo

func (m *TxDataAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TxDataAccount) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *TxDataAccount) GetFrozenHeight() int64 {
	if m != nil {
		return m.FrozenHeight
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.TransactionStatus", TransactionStatus_name, TransactionStatus_value)
	proto.RegisterEnum("pb.QCState", QCState_name, QCState_value)
	proto.RegisterType((*QCSignInfos)(nil), "pb.QCSignInfos")
	proto.RegisterType((*SignInfo)(nil), "pb.SignInfo")
	proto.RegisterType((*QuorumCert)(nil), "pb.QuorumCert")
	proto.RegisterType((*HDInfo)(nil), "pb.HDInfo")
	proto.RegisterType((*SignatureInfo)(nil), "pb.SignatureInfo")
	proto.RegisterType((*XuperSignature)(nil), "pb.XuperSignature")
	proto.RegisterType((*Transaction)(nil), "pb.Transaction")
	proto.RegisterType((*LedgerMeta)(nil), "pb.LedgerMeta")
	proto.RegisterType((*UtxoMeta)(nil), "pb.UtxoMeta")
	proto.RegisterType((*InternalBlock)(nil), "pb.InternalBlock")
	proto.RegisterMapType((map[string]string)(nil), "pb.InternalBlock.FailedTxsEntry")
	proto.RegisterType((*Utxo)(nil), "pb.Utxo")
	proto.RegisterType((*ModifyBlock)(nil), "pb.ModifyBlock")
	proto.RegisterType((*TxDataAccount)(nil), "pb.TxDataAccount")
}

func init() { proto.RegisterFile("xledger.proto", fileDescriptor_a2597d8d8aba161e) }

var fileDescriptor_a2597d8d8aba161e = []byte{
	// 1693 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x57, 0xef, 0x6e, 0x1b, 0xc7,
	0x11, 0x2f, 0x45, 0x52, 0x24, 0x87, 0x7f, 0x44, 0x6d, 0xdc, 0xe4, 0x22, 0xc7, 0x31, 0x4d, 0xb7,
	0x00, 0x1b, 0x38, 0x2a, 0xea, 0x00, 0x45, 0x1a, 0x34, 0x08, 0x64, 0x92, 0x8a, 0xd9, 0x58, 0x94,
	0xbc, 0xa2, 0xed, 0x7c, 0x3b, 0x1c, 0x8f, 0x4b, 0x72, 0x21, 0xf2, 0xee, 0xba, 0xbb, 0x27, 0x9f,
	0xfc, 0x08, 0x7d, 0x84, 0x3e, 0x42, 0x1f, 0xa2, 0x40, 0x5f, 0xa5, 0x4f, 0x52, 0xcc, 0xec, 0xdd,
	0xf1, 0xa8, 0xc2, 0xfe, 0x76, 0xf3, 0xdb, 0x99, 0xd9, 0xd9, 0xd9, 0x99, 0xdf, 0xec, 0x41, 0x3b,
	0xd9, 0x88, 0xc5, 0x4a, 0xa8, 0xd3, 0x48, 0x85, 0x26, 0x64, 0x07, 0xd1, 0xfc, 0xa4, 0xe3, 0x87,
	0x81, 0x51, 0x9e, 0x6f, 0x2c, 0x76, 0xd2, 0x2a, 0x6a, 0xf4, 0x7f, 0x84, 0xe6, 0xeb, 0xe1, 0xb5,
	0x5c, 0x05, 0x93, 0x60, 0x19, 0x6a, 0x76, 0xba, 0x27, 0x3a, 0xa5, 0x5e, 0x79, 0xd0, 0x7c, 0xde,
	0x3a, 0x8d, 0xe6, 0xa7, 0x19, 0xc8, 0x8b, 0x0a, 0xfd, 0xb7, 0x50, 0xcf, 0x04, 0xe6, 0x40, 0xed,
	0x6c, 0xb1, 0x50, 0x42, 0xa3, 0x5d, 0x69, 0xd0, 0xe0, 0x99, 0xc8, 0xbe, 0x82, 0xc6, 0x55, 0x3c,
	0xdf, 0x48, 0xff, 0x17, 0x71, 0xe7, 0x1c, 0xd0, 0xda, 0x0e, 0x60, 0x0c, 0x2a, 0xe8, 0xc3, 0x29,
	0xf7, 0x4a, 0x83, 0x16, 0xa7, 0xef, 0xfe, 0xbf, 0x4b, 0x00, 0xaf, 0xe3, 0x50, 0xc5, 0xdb, 0xa1,
	0x50, 0x86, 0x7d, 0x0d, 0x70, 0xa5, 0xc2, 0x28, 0xd4, 0xde, 0x66, 0xb2, 0x20, 0xef, 0x2d, 0x5e,
	0x40, 0x58, 0x0f, 0x9a, 0x99, 0x74, 0xa1, 0x57, 0xb4, 0x45, 0x8b, 0x17, 0x21, 0xf6, 0x18, 0x2a,
	0xb3, 0xbb, 0x48, 0xd0, 0x26, 0x9d, 0xe7, 0x4d, 0x3c, 0xd1, 0xeb, 0xe1, 0xb5, 0xf1, 0x8c, 0xe0,
	0xb4, 0x80, 0x5b, 0xbc, 0x95, 0xe2, 0xfd, 0x34, 0xde, 0xce, 0x85, 0x72, 0x2a, 0xbd, 0xd2, 0xa0,
	0xcc, 0x0b, 0x08, 0xfb, 0x16, 0x1a, 0xbb, 0xbc, 0x54, 0x7b, 0xa5, 0x41, 0xf3, 0xf9, 0x51, 0xea,
	0x25, 0x83, 0xf9, 0x4e, 0xa3, 0xff, 0x1a, 0x0e, 0x5f, 0x8e, 0x28, 0x2d, 0x7d, 0x68, 0xaf, 0x17,
	0x6e, 0x44, 0xc7, 0x75, 0x6f, 0xc4, 0x5d, 0x1a, 0x7e, 0x73, 0xbd, 0xd8, 0xa5, 0xe0, 0x29, 0xb4,
	0x43, 0x25, 0x57, 0x32, 0xf0, 0x36, 0xee, 0xda, 0xd3, 0xeb, 0xf4, 0x04, 0xad, 0x0c, 0x7c, 0xe9,
	0xe9, 0x75, 0xff, 0x0c, 0xda, 0xe8, 0xdf, 0x33, 0xb1, 0x12, 0xe4, 0x79, 0x2f, 0xad, 0xa5, 0x8f,
	0xa5, 0xf5, 0xa0, 0x90, 0xd6, 0x4b, 0xe8, 0xfc, 0x1a, 0x47, 0x42, 0xe5, 0x7e, 0xd8, 0x63, 0x68,
	0xee, 0x42, 0xb3, 0x17, 0xde, 0xe2, 0x10, 0x65, 0x5e, 0xe8, 0xee, 0x74, 0xa6, 0x9d, 0xfa, 0xda,
	0x01, 0xfd, 0xff, 0x1e, 0x42, 0x73, 0xa6, 0xbc, 0x40, 0x7b, 0xbe, 0x91, 0x61, 0x80, 0x9b, 0x9a,
	0x44, 0x66, 0x57, 0x44, 0xdf, 0x58, 0x17, 0xf3, 0x4d, 0xe8, 0xdf, 0xc8, 0x45, 0x6a, 0x9f, 0x89,
	0xec, 0x19, 0x34, 0x4c, 0xe2, 0xca, 0x20, 0x8a, 0x8d, 0x76, 0xca, 0x54, 0x6b, 0x47, 0xb6, 0x2e,
	0xf5, 0xe9, 0x2c, 0x99, 0x20, 0xce, 0xeb, 0xc6, 0x7e, 0x68, 0xf6, 0x47, 0x00, 0x93, 0xb8, 0x61,
	0x6c, 0x48, 0xbd, 0x42, 0xea, 0xdd, 0x9d, 0xfa, 0x25, 0x2d, 0xf0, 0x86, 0x49, 0xbf, 0x34, 0x06,
	0xb3, 0x10, 0xda, 0x77, 0x0e, 0x6d, 0x30, 0xf8, 0xcd, 0x4e, 0xa0, 0xee, 0x87, 0x32, 0x98, 0x7b,
	0x5a, 0x38, 0xb5, 0x5e, 0x69, 0x50, 0xe7, 0xb9, 0xcc, 0x1e, 0x40, 0x35, 0x08, 0x03, 0x5f, 0x38,
	0x75, 0xca, 0xa5, 0x15, 0x30, 0x01, 0x46, 0x6e, 0x85, 0x36, 0xde, 0x36, 0x72, 0x1a, 0x54, 0x17,
	0x3b, 0x00, 0x0f, 0x77, 0x2b, 0x94, 0x96, 0x61, 0xe0, 0x40, 0xaf, 0x34, 0xa8, 0xf2, 0x4c, 0xc4,
	0x15, 0x2f, 0x36, 0xe1, 0x4a, 0x04, 0x4e, 0x93, 0x36, 0xca, 0x44, 0xf6, 0x67, 0x68, 0xe7, 0xc7,
	0x76, 0x45, 0x62, 0x9c, 0x2f, 0xe8, 0x2c, 0xec, 0xde, 0xd1, 0xc7, 0x89, 0xe1, 0xcd, 0xec, 0xf4,
	0xe3, 0xc4, 0xb0, 0xbf, 0x40, 0x67, 0x97, 0x00, 0x32, 0x74, 0xc8, 0xf0, 0xb3, 0xfb, 0x49, 0x40,
	0xcb, 0x56, 0x9e, 0x07, 0x34, 0x7d, 0x01, 0xc7, 0x19, 0x0d, 0xb8, 0x4a, 0xfc, 0x3d, 0x16, 0xda,
	0x68, 0xe7, 0x4b, 0xb2, 0xfe, 0x6d, 0x66, 0x3d, 0x09, 0x6e, 0xc3, 0x1b, 0xc1, 0xed, 0x2a, 0xef,
	0x66, 0xfa, 0x29, 0x40, 0x95, 0x20, 0x03, 0x69, 0xa4, 0x67, 0x42, 0xe5, 0x9c, 0xd8, 0x72, 0xcb,
	0x01, 0xf6, 0x04, 0x5a, 0x5e, 0x6c, 0xd6, 0xe4, 0x5d, 0x2a, 0xe1, 0x3c, 0xec, 0x95, 0x07, 0x0d,
	0xde, 0x44, 0x8c, 0x5b, 0x88, 0xfd, 0x00, 0x47, 0xb9, 0xbe, 0x8b, 0x35, 0xa4, 0x9d, 0xaf, 0x28,
	0x84, 0xe3, 0x8c, 0x60, 0xf2, 0xda, 0xe6, 0x9d, 0x5c, 0x13, 0x71, 0xcd, 0x7e, 0x02, 0x56, 0x74,
	0x9f, 0x9a, 0x3f, 0xfa, 0x98, 0x79, 0xb7, 0xb0, 0xaf, 0x75, 0xf0, 0x2d, 0x30, 0x25, 0x7c, 0x21,
	0x6f, 0xc5, 0xc2, 0xdd, 0xdd, 0xe7, 0xd7, 0x74, 0x9f, 0xc7, 0xd9, 0xca, 0x2c, 0xbf, 0xd7, 0x3f,
	0x01, 0x24, 0xd8, 0x29, 0xb4, 0x91, 0xf3, 0x98, 0xfa, 0x9d, 0xe1, 0x3e, 0xfb, 0xfd, 0xc3, 0x1b,
	0x49, 0x26, 0xb3, 0xe7, 0xd0, 0xda, 0x86, 0x0b, 0xb9, 0xbc, 0x73, 0xa9, 0xbe, 0x9d, 0xde, 0x8e,
	0x24, 0x2e, 0x08, 0x7f, 0x81, 0x30, 0x6f, 0x6e, 0x77, 0x02, 0x7b, 0x0a, 0xb5, 0x97, 0x23, 0x57,
	0x06, 0xcb, 0xd0, 0x79, 0x42, 0xea, 0x80, 0xea, 0x96, 0x39, 0x78, 0xca, 0x20, 0x7d, 0x0d, 0xf0,
	0x8a, 0x38, 0xfb, 0x42, 0x18, 0x0f, 0x13, 0xad, 0xc2, 0xd0, 0xb8, 0x59, 0x4f, 0xa5, 0x74, 0x82,
	0xd8, 0x8b, 0xb4, 0xaf, 0x1e, 0x43, 0xd3, 0xc8, 0xc8, 0xdd, 0xef, 0x3a, 0x30, 0x32, 0xca, 0x14,
	0x9e, 0x40, 0xcb, 0xa8, 0x38, 0xb8, 0x71, 0xd7, 0x42, 0xae, 0xd6, 0x86, 0x58, 0xb1, 0xcc, 0x9b,
	0x84, 0xbd, 0x24, 0xa8, 0xff, 0xcf, 0x2a, 0xd4, 0xdf, 0x98, 0x24, 0xa4, 0x3d, 0x7f, 0x0f, 0x9d,
	0x8d, 0x67, 0x84, 0xbe, 0xbf, 0x6b, 0xdb, 0xa2, 0x99, 0xdb, 0x3e, 0xb4, 0xf1, 0x0b, 0xa9, 0xc4,
	0xdd, 0x48, 0x6d, 0x9c, 0x03, 0x5b, 0x04, 0x08, 0xfe, 0x22, 0xee, 0x5e, 0x49, 0x6d, 0xd8, 0x23,
	0x80, 0xd8, 0x24, 0xa1, 0x6b, 0x42, 0xe3, 0x6d, 0x68, 0xe3, 0x06, 0x6f, 0x20, 0x32, 0x43, 0x00,
	0xfb, 0xd3, 0xbb, 0x5d, 0x8d, 0xc4, 0xc6, 0xbb, 0x4b, 0x49, 0x38, 0x97, 0xd9, 0x33, 0x38, 0x8e,
	0x03, 0x3f, 0x0c, 0x96, 0x52, 0x6d, 0x67, 0xc9, 0xd9, 0x36, 0x8c, 0x03, 0x43, 0x54, 0x5c, 0xe6,
	0xff, 0xbf, 0xc0, 0x7e, 0x07, 0x9d, 0xad, 0x97, 0xd8, 0x80, 0x5d, 0x2d, 0x3f, 0x08, 0xe2, 0x81,
	0x32, 0x6f, 0x6d, 0xbd, 0x84, 0x02, 0xbe, 0x96, 0x1f, 0x04, 0x1b, 0x61, 0x59, 0x68, 0xa1, 0xb0,
	0x2c, 0xb2, 0x8a, 0xd7, 0x4e, 0xed, 0x53, 0x9d, 0x71, 0x9c, 0x19, 0x0c, 0x33, 0x7d, 0xf4, 0xb2,
	0x0c, 0xd5, 0x5c, 0x2e, 0x16, 0x22, 0xc8, 0xdd, 0x10, 0x8d, 0x7c, 0xdc, 0x4b, 0x6e, 0x90, 0xb9,
	0x61, 0x3f, 0xc2, 0xc3, 0x40, 0xbc, 0x77, 0x3d, 0xdf, 0xc7, 0x03, 0xb8, 0x4a, 0xe8, 0x30, 0x56,
	0xbe, 0x70, 0x3d, 0x7b, 0x52, 0xcb, 0x3d, 0x4e, 0x20, 0xde, 0x9f, 0x59, 0x0d, 0x9e, 0x2a, 0xa4,
	0x07, 0xfe, 0x1e, 0xbe, 0x90, 0x4a, 0x09, 0xe2, 0x9f, 0xf9, 0x46, 0xd0, 0x19, 0xed, 0x65, 0x12,
	0x35, 0x95, 0xf9, 0xc7, 0x96, 0xef, 0x5b, 0x5e, 0x6f, 0xe4, 0x42, 0xbc, 0x93, 0xc1, 0x22, 0x7c,
	0x4f, 0xd4, 0x75, 0xcf, 0xb2, 0xb0, 0xcc, 0x9e, 0x41, 0x7d, 0xe5, 0xe9, 0x2b, 0x25, 0x7d, 0xe1,
	0xb4, 0xe8, 0xb8, 0x39, 0x23, 0xff, 0x9c, 0xe2, 0x3c, 0xd7, 0x60, 0x3f, 0xc3, 0x83, 0x95, 0x0a,
	0xe3, 0xc8, 0xf5, 0xd7, 0x9e, 0x2c, 0x24, 0xaa, 0xfd, 0xa9, 0x44, 0x31, 0x32, 0x19, 0xa2, 0x45,
	0x96, 0xa9, 0xfe, 0x7f, 0xaa, 0xd0, 0x9e, 0x04, 0x46, 0xa8, 0xc0, 0xdb, 0xd8, 0x46, 0x2a, 0xf0,
	0x70, 0x69, 0x9f, 0x87, 0x73, 0x56, 0x3f, 0x20, 0x3c, 0x65, 0xf5, 0xc2, 0x50, 0x2a, 0xef, 0x0f,
	0xa5, 0x2f, 0xa1, 0x1e, 0x29, 0x61, 0xc7, 0x70, 0xc5, 0x2e, 0x45, 0x4a, 0xe0, 0x04, 0xc6, 0xe2,
	0x8c, 0xe8, 0x4d, 0x21, 0x14, 0xd5, 0x5d, 0x8b, 0xe7, 0x32, 0x0e, 0x1b, 0xa2, 0x8a, 0x74, 0xd8,
	0xe0, 0x37, 0xfb, 0x1c, 0x0e, 0xa3, 0x78, 0x8e, 0x33, 0xbf, 0x46, 0x68, 0x2a, 0x61, 0x7f, 0x6e,
	0x85, 0xba, 0xd9, 0x08, 0x17, 0xbb, 0x96, 0xea, 0xa4, 0xc5, 0xc1, 0x42, 0x3c, 0x0c, 0x0d, 0x1a,
	0xa6, 0x9d, 0x69, 0x2f, 0x3d, 0x95, 0xf6, 0x67, 0x11, 0xdc, 0x9f, 0x45, 0xdf, 0x61, 0x57, 0xe7,
	0xb3, 0x58, 0x3b, 0xcd, 0x6c, 0xa2, 0xce, 0x4f, 0x0b, 0x33, 0x9a, 0xef, 0x29, 0xe1, 0x71, 0x4d,
	0xe2, 0x52, 0x3d, 0xd1, 0x0d, 0x56, 0x79, 0xcd, 0x24, 0x43, 0x2a, 0xa8, 0x5d, 0x98, 0x46, 0x09,
	0xe1, 0xb4, 0xed, 0xdb, 0xc0, 0x42, 0x33, 0x25, 0x28, 0x89, 0x7e, 0xac, 0x66, 0x42, 0x6d, 0x9d,
	0x2e, 0x05, 0x93, 0x89, 0xf8, 0x20, 0xf3, 0x63, 0x45, 0x57, 0x33, 0x8d, 0xb7, 0xce, 0xb1, 0xe5,
	0x97, 0x02, 0xc4, 0x7e, 0x02, 0x58, 0x7a, 0x72, 0x83, 0x6c, 0x9c, 0x68, 0x87, 0x51, 0xa8, 0x3d,
	0x0c, 0x75, 0xef, 0x5e, 0x4f, 0xcf, 0x49, 0x67, 0x96, 0xe8, 0x71, 0x60, 0xd4, 0x1d, 0x6f, 0x2c,
	0x33, 0x19, 0x1f, 0x6c, 0xc6, 0x53, 0x2b, 0x61, 0x5e, 0x48, 0xa3, 0x9d, 0xcf, 0x28, 0xf4, 0x02,
	0xc2, 0x06, 0x50, 0xfb, 0x5b, 0xac, 0x8d, 0x5c, 0xde, 0x39, 0x0f, 0xa8, 0xbe, 0x3a, 0xf4, 0x5c,
	0xcb, 0x1f, 0x95, 0x3c, 0x5b, 0xc6, 0x14, 0xc8, 0xc0, 0x25, 0xf2, 0x73, 0x3a, 0x76, 0x54, 0xcb,
	0x60, 0x86, 0x22, 0x7b, 0x08, 0x8d, 0x40, 0x24, 0xc6, 0x56, 0xc3, 0x91, 0xbd, 0x72, 0x04, 0xb0,
	0x1c, 0x4e, 0xfe, 0x0a, 0x9d, 0xfd, 0xf0, 0x58, 0x17, 0xca, 0x37, 0xf9, 0x5b, 0x0c, 0x3f, 0xb1,
	0xfa, 0x6e, 0xbd, 0x4d, 0x2c, 0xd2, 0x67, 0xaf, 0x15, 0x7e, 0x38, 0xf8, 0xbe, 0xd4, 0xff, 0x47,
	0x09, 0x2a, 0x48, 0xb0, 0x78, 0xd9, 0x69, 0x87, 0x5b, 0x52, 0x4d, 0x25, 0xc4, 0x4d, 0x88, 0x4f,
	0xe8, 0x94, 0xc0, 0x53, 0x09, 0xab, 0xd0, 0x84, 0x57, 0xb6, 0xae, 0x6c, 0xed, 0xe6, 0x32, 0xde,
	0x88, 0x12, 0xcb, 0x19, 0x3e, 0xc1, 0xd2, 0xda, 0x4d, 0x45, 0x2c, 0x1d, 0x25, 0x96, 0x97, 0xcb,
	0xa5, 0x16, 0x96, 0x34, 0xab, 0x7c, 0x07, 0xf4, 0xff, 0x55, 0x82, 0x66, 0x61, 0x48, 0x21, 0xe1,
	0x8b, 0xe5, 0x52, 0xf8, 0x46, 0xde, 0x0a, 0x37, 0x7f, 0xd1, 0x35, 0x78, 0x3b, 0x47, 0xc9, 0xe9,
	0xe7, 0x70, 0xb8, 0xf5, 0xd4, 0x8d, 0xb0, 0x33, 0xa6, 0xce, 0x53, 0x89, 0xfd, 0x01, 0xba, 0x3b,
	0xf3, 0xbd, 0x19, 0x73, 0x94, 0xe3, 0x29, 0xf7, 0x3c, 0x02, 0x28, 0xbc, 0x8d, 0x2b, 0x76, 0x1e,
	0x44, 0xc5, 0x57, 0x2c, 0xb5, 0x55, 0x95, 0x16, 0xe8, 0xbb, 0xbf, 0x84, 0xf6, 0x2c, 0x19, 0x79,
	0xc6, 0x4b, 0x79, 0x90, 0x9e, 0x5a, 0xfb, 0x7f, 0x1e, 0xa9, 0x58, 0xc8, 0xad, 0xcd, 0x7f, 0x96,
	0xdb, 0xa7, 0xd0, 0x5e, 0xaa, 0xf0, 0x83, 0x08, 0xf6, 0xa3, 0x6b, 0x59, 0xd0, 0x86, 0xf6, 0x8d,
	0x80, 0xe3, 0x42, 0xdf, 0xe0, 0xcf, 0x42, 0xac, 0x59, 0x0b, 0xea, 0x6f, 0xa6, 0xa3, 0xf1, 0xf9,
	0x64, 0x3a, 0xee, 0xfe, 0x86, 0x35, 0xa1, 0x36, 0xbd, 0x1c, 0xff, 0x3a, 0xb9, 0x9e, 0x75, 0x4b,
	0x28, 0x0c, 0x2f, 0xa7, 0xe7, 0x13, 0x7e, 0xd1, 0x3d, 0x60, 0x6d, 0x68, 0x9c, 0xbf, 0xe1, 0xc3,
	0xb3, 0xd9, 0xe4, 0x72, 0xda, 0x2d, 0xa3, 0xf8, 0x66, 0x9a, 0xad, 0x56, 0x18, 0xc0, 0xe1, 0xf9,
	0xd9, 0xe4, 0xd5, 0x78, 0xd4, 0xad, 0x7e, 0xf3, 0x0a, 0x6a, 0xe9, 0xaf, 0x08, 0x3a, 0x9f, 0x8e,
	0xdf, 0xb9, 0x6f, 0x27, 0xe3, 0x77, 0xd6, 0xf9, 0x15, 0x1f, 0x5f, 0x9d, 0xf1, 0x71, 0xb7, 0xc4,
	0x3a, 0x00, 0x57, 0x7c, 0xec, 0x0e, 0x2f, 0x2f, 0x2e, 0x26, 0xb3, 0xee, 0x01, 0x7a, 0x48, 0xbf,
	0xcb, 0xf8, 0x3d, 0x1a, 0x0f, 0x27, 0xa3, 0x71, 0xb7, 0x32, 0x3f, 0x24, 0x12, 0xfd, 0xee, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x94, 0xdd, 0x42, 0x7f, 0x0a, 0x0e, 0x00, 0x00,
}
