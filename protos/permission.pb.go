// Code generated by protoc-gen-go. DO NOT EDIT.
// source: permission.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// --------   Account and Permission Section --------
type PermissionRule int32

const (
	PermissionRule_NULL           PermissionRule = 0
	PermissionRule_SIGN_THRESHOLD PermissionRule = 1
	PermissionRule_SIGN_AKSET     PermissionRule = 2
	PermissionRule_SIGN_RATE      PermissionRule = 3
	PermissionRule_SIGN_SUM       PermissionRule = 4
	PermissionRule_CA_SERVER      PermissionRule = 5
	PermissionRule_COMMUNITY_VOTE PermissionRule = 6
)

var PermissionRule_name = map[int32]string{
	0: "NULL",
	1: "SIGN_THRESHOLD",
	2: "SIGN_AKSET",
	3: "SIGN_RATE",
	4: "SIGN_SUM",
	5: "CA_SERVER",
	6: "COMMUNITY_VOTE",
}

var PermissionRule_value = map[string]int32{
	"NULL":           0,
	"SIGN_THRESHOLD": 1,
	"SIGN_AKSET":     2,
	"SIGN_RATE":      3,
	"SIGN_SUM":       4,
	"CA_SERVER":      5,
	"COMMUNITY_VOTE": 6,
}

func (x PermissionRule) String() string {
	return proto.EnumName(PermissionRule_name, int32(x))
}

func (PermissionRule) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0}
}

// 签名详情
type SignatureInfo struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Sign                 []byte   `protobuf:"bytes,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureInfo) Reset()         { *m = SignatureInfo{} }
func (m *SignatureInfo) String() string { return proto.CompactTextString(m) }
func (*SignatureInfo) ProtoMessage()    {}
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0}
}

func (m *SignatureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureInfo.Unmarshal(m, b)
}
func (m *SignatureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureInfo.Marshal(b, m, deterministic)
}
func (m *SignatureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureInfo.Merge(m, src)
}
func (m *SignatureInfo) XXX_Size() int {
	return xxx_messageInfo_SignatureInfo.Size(m)
}
func (m *SignatureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureInfo proto.InternalMessageInfo

func (m *SignatureInfo) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *SignatureInfo) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type PermissionModel struct {
	Rule                 PermissionRule `protobuf:"varint,1,opt,name=rule,proto3,enum=protos.PermissionRule" json:"rule,omitempty"`
	AcceptValue          float64        `protobuf:"fixed64,2,opt,name=acceptValue,proto3" json:"acceptValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PermissionModel) Reset()         { *m = PermissionModel{} }
func (m *PermissionModel) String() string { return proto.CompactTextString(m) }
func (*PermissionModel) ProtoMessage()    {}
func (*PermissionModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{1}
}

func (m *PermissionModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionModel.Unmarshal(m, b)
}
func (m *PermissionModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionModel.Marshal(b, m, deterministic)
}
func (m *PermissionModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionModel.Merge(m, src)
}
func (m *PermissionModel) XXX_Size() int {
	return xxx_messageInfo_PermissionModel.Size(m)
}
func (m *PermissionModel) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionModel.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionModel proto.InternalMessageInfo

func (m *PermissionModel) GetRule() PermissionRule {
	if m != nil {
		return m.Rule
	}
	return PermissionRule_NULL
}

func (m *PermissionModel) GetAcceptValue() float64 {
	if m != nil {
		return m.AcceptValue
	}
	return 0
}

// AK集的表示方法
type AkSet struct {
	Aks                  []string `protobuf:"bytes,1,rep,name=aks,proto3" json:"aks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AkSet) Reset()         { *m = AkSet{} }
func (m *AkSet) String() string { return proto.CompactTextString(m) }
func (*AkSet) ProtoMessage()    {}
func (*AkSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{2}
}

func (m *AkSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AkSet.Unmarshal(m, b)
}
func (m *AkSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AkSet.Marshal(b, m, deterministic)
}
func (m *AkSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AkSet.Merge(m, src)
}
func (m *AkSet) XXX_Size() int {
	return xxx_messageInfo_AkSet.Size(m)
}
func (m *AkSet) XXX_DiscardUnknown() {
	xxx_messageInfo_AkSet.DiscardUnknown(m)
}

var xxx_messageInfo_AkSet proto.InternalMessageInfo

func (m *AkSet) GetAks() []string {
	if m != nil {
		return m.Aks
	}
	return nil
}

type AkSets struct {
	Sets                 map[string]*AkSet `protobuf:"bytes,1,rep,name=sets,proto3" json:"sets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Expression           string            `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AkSets) Reset()         { *m = AkSets{} }
func (m *AkSets) String() string { return proto.CompactTextString(m) }
func (*AkSets) ProtoMessage()    {}
func (*AkSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{3}
}

func (m *AkSets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AkSets.Unmarshal(m, b)
}
func (m *AkSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AkSets.Marshal(b, m, deterministic)
}
func (m *AkSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AkSets.Merge(m, src)
}
func (m *AkSets) XXX_Size() int {
	return xxx_messageInfo_AkSets.Size(m)
}
func (m *AkSets) XXX_DiscardUnknown() {
	xxx_messageInfo_AkSets.DiscardUnknown(m)
}

var xxx_messageInfo_AkSets proto.InternalMessageInfo

func (m *AkSets) GetSets() map[string]*AkSet {
	if m != nil {
		return m.Sets
	}
	return nil
}

func (m *AkSets) GetExpression() string {
	if m != nil {
		return m.Expression
	}
	return ""
}

// Acl实际使用的结构
type Acl struct {
	Pm                   *PermissionModel   `protobuf:"bytes,1,opt,name=pm,proto3" json:"pm,omitempty"`
	AksWeight            map[string]float64 `protobuf:"bytes,2,rep,name=aksWeight,proto3" json:"aksWeight,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	AkSets               *AkSets            `protobuf:"bytes,3,opt,name=akSets,proto3" json:"akSets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Acl) Reset()         { *m = Acl{} }
func (m *Acl) String() string { return proto.CompactTextString(m) }
func (*Acl) ProtoMessage()    {}
func (*Acl) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{4}
}

func (m *Acl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Acl.Unmarshal(m, b)
}
func (m *Acl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Acl.Marshal(b, m, deterministic)
}
func (m *Acl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Acl.Merge(m, src)
}
func (m *Acl) XXX_Size() int {
	return xxx_messageInfo_Acl.Size(m)
}
func (m *Acl) XXX_DiscardUnknown() {
	xxx_messageInfo_Acl.DiscardUnknown(m)
}

var xxx_messageInfo_Acl proto.InternalMessageInfo

func (m *Acl) GetPm() *PermissionModel {
	if m != nil {
		return m.Pm
	}
	return nil
}

func (m *Acl) GetAksWeight() map[string]float64 {
	if m != nil {
		return m.AksWeight
	}
	return nil
}

func (m *Acl) GetAkSets() *AkSets {
	if m != nil {
		return m.AkSets
	}
	return nil
}

// 查询Acl
type AclStatus struct {
	Bcname               string   `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	AccountName          string   `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ContractName         string   `protobuf:"bytes,3,opt,name=contractName,proto3" json:"contractName,omitempty"`
	MethodName           string   `protobuf:"bytes,4,opt,name=methodName,proto3" json:"methodName,omitempty"`
	Confirmed            bool     `protobuf:"varint,5,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Acl                  *Acl     `protobuf:"bytes,6,opt,name=acl,proto3" json:"acl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AclStatus) Reset()         { *m = AclStatus{} }
func (m *AclStatus) String() string { return proto.CompactTextString(m) }
func (*AclStatus) ProtoMessage()    {}
func (*AclStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{5}
}

func (m *AclStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AclStatus.Unmarshal(m, b)
}
func (m *AclStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AclStatus.Marshal(b, m, deterministic)
}
func (m *AclStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AclStatus.Merge(m, src)
}
func (m *AclStatus) XXX_Size() int {
	return xxx_messageInfo_AclStatus.Size(m)
}
func (m *AclStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AclStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AclStatus proto.InternalMessageInfo

func (m *AclStatus) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AclStatus) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *AclStatus) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

func (m *AclStatus) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *AclStatus) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *AclStatus) GetAcl() *Acl {
	if m != nil {
		return m.Acl
	}
	return nil
}

type AK2AccountRequest struct {
	Bcname               string   `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AK2AccountRequest) Reset()         { *m = AK2AccountRequest{} }
func (m *AK2AccountRequest) String() string { return proto.CompactTextString(m) }
func (*AK2AccountRequest) ProtoMessage()    {}
func (*AK2AccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{6}
}

func (m *AK2AccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AK2AccountRequest.Unmarshal(m, b)
}
func (m *AK2AccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AK2AccountRequest.Marshal(b, m, deterministic)
}
func (m *AK2AccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AK2AccountRequest.Merge(m, src)
}
func (m *AK2AccountRequest) XXX_Size() int {
	return xxx_messageInfo_AK2AccountRequest.Size(m)
}
func (m *AK2AccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AK2AccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AK2AccountRequest proto.InternalMessageInfo

func (m *AK2AccountRequest) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AK2AccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AK2AccountResponse struct {
	Bcname               string   `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Account              []string `protobuf:"bytes,2,rep,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AK2AccountResponse) Reset()         { *m = AK2AccountResponse{} }
func (m *AK2AccountResponse) String() string { return proto.CompactTextString(m) }
func (*AK2AccountResponse) ProtoMessage()    {}
func (*AK2AccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{7}
}

func (m *AK2AccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AK2AccountResponse.Unmarshal(m, b)
}
func (m *AK2AccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AK2AccountResponse.Marshal(b, m, deterministic)
}
func (m *AK2AccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AK2AccountResponse.Merge(m, src)
}
func (m *AK2AccountResponse) XXX_Size() int {
	return xxx_messageInfo_AK2AccountResponse.Size(m)
}
func (m *AK2AccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AK2AccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AK2AccountResponse proto.InternalMessageInfo

func (m *AK2AccountResponse) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *AK2AccountResponse) GetAccount() []string {
	if m != nil {
		return m.Account
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.PermissionRule", PermissionRule_name, PermissionRule_value)
	proto.RegisterType((*SignatureInfo)(nil), "protos.SignatureInfo")
	proto.RegisterType((*PermissionModel)(nil), "protos.PermissionModel")
	proto.RegisterType((*AkSet)(nil), "protos.AkSet")
	proto.RegisterType((*AkSets)(nil), "protos.AkSets")
	proto.RegisterMapType((map[string]*AkSet)(nil), "protos.AkSets.SetsEntry")
	proto.RegisterType((*Acl)(nil), "protos.Acl")
	proto.RegisterMapType((map[string]float64)(nil), "protos.Acl.AksWeightEntry")
	proto.RegisterType((*AclStatus)(nil), "protos.AclStatus")
	proto.RegisterType((*AK2AccountRequest)(nil), "protos.AK2AccountRequest")
	proto.RegisterType((*AK2AccountResponse)(nil), "protos.AK2AccountResponse")
}

func init() { proto.RegisterFile("permission.proto", fileDescriptor_c837ef01cbda0ad8) }

var fileDescriptor_c837ef01cbda0ad8 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x5d, 0x6f, 0xd3, 0x3c,
	0x18, 0x7d, 0x9d, 0xa4, 0x79, 0x97, 0xa7, 0x5b, 0x08, 0x16, 0x1a, 0x61, 0x02, 0x54, 0x05, 0x09,
	0xaa, 0x09, 0xf5, 0xa2, 0xdc, 0x4c, 0x88, 0x9b, 0x68, 0x64, 0x6c, 0xda, 0xda, 0x4e, 0x4e, 0x5b,
	0xc4, 0x55, 0x95, 0xa6, 0xde, 0x16, 0x35, 0x5f, 0xc4, 0x0e, 0x62, 0x37, 0xfc, 0x14, 0x7e, 0x0e,
	0x97, 0xfc, 0x26, 0x64, 0xbb, 0x1f, 0xa9, 0xf8, 0xb8, 0x69, 0xfd, 0x9c, 0x73, 0x7c, 0x1e, 0x9f,
	0xc7, 0x6e, 0xc1, 0x29, 0x69, 0x95, 0x25, 0x8c, 0x25, 0x45, 0xde, 0x2b, 0xab, 0x82, 0x17, 0xd8,
	0x94, 0x5f, 0xcc, 0xf3, 0xe1, 0x20, 0x4c, 0x6e, 0xf3, 0x88, 0xd7, 0x15, 0xbd, 0xc8, 0x6f, 0x0a,
	0xfc, 0x14, 0xac, 0xeb, 0x7a, 0x9e, 0x26, 0xf1, 0x25, 0xbd, 0x77, 0x51, 0x07, 0x75, 0x2d, 0xb2,
	0x05, 0x30, 0x06, 0x43, 0xc8, 0x5d, 0xad, 0x83, 0xba, 0xfb, 0x44, 0xae, 0xbd, 0x19, 0x3c, 0xb8,
	0xde, 0xd8, 0x0f, 0x8a, 0x05, 0x4d, 0xf1, 0x31, 0x18, 0x55, 0x9d, 0x52, 0xb9, 0xdf, 0xee, 0x1f,
	0xaa, 0x9e, 0xac, 0xb7, 0x95, 0x91, 0x3a, 0xa5, 0x44, 0x6a, 0x70, 0x07, 0xda, 0x51, 0x1c, 0xd3,
	0x92, 0x4f, 0xa3, 0xb4, 0xa6, 0xd2, 0x19, 0x91, 0x26, 0xe4, 0x3d, 0x81, 0x96, 0xbf, 0x0c, 0x29,
	0xc7, 0x0e, 0xe8, 0xd1, 0x92, 0xb9, 0xa8, 0xa3, 0x77, 0x2d, 0x22, 0x96, 0xde, 0x77, 0x04, 0xa6,
	0xe4, 0x18, 0x7e, 0x0d, 0x06, 0xa3, 0x5c, 0xb1, 0xed, 0xbe, 0xbb, 0xee, 0xa9, 0xd8, 0x9e, 0xf8,
	0x08, 0x72, 0x5e, 0xdd, 0x13, 0xa9, 0xc2, 0xcf, 0x01, 0xe8, 0xd7, 0xb2, 0xa2, 0xf2, 0x34, 0xb2,
	0xa9, 0x45, 0x1a, 0xc8, 0xd1, 0x19, 0x58, 0x9b, 0x2d, 0xa2, 0xef, 0x72, 0x33, 0x0d, 0xb1, 0xc4,
	0x2f, 0xa0, 0xf5, 0x65, 0x73, 0xdc, 0x76, 0xff, 0x60, 0xa7, 0x1b, 0x51, 0xdc, 0x5b, 0xed, 0x04,
	0x79, 0x3f, 0x11, 0xe8, 0x7e, 0x9c, 0xe2, 0x57, 0xa0, 0x95, 0x99, 0x74, 0x68, 0xf7, 0x1f, 0xff,
	0x3e, 0x0f, 0x39, 0x36, 0xa2, 0x95, 0x19, 0x3e, 0x01, 0x2b, 0x5a, 0xb2, 0x8f, 0x34, 0xb9, 0xbd,
	0xe3, 0xae, 0x26, 0xb3, 0x1c, 0x6d, 0xdc, 0xe3, 0xb4, 0xe7, 0xaf, 0x49, 0x95, 0x66, 0x2b, 0xc6,
	0x2f, 0xc1, 0x8c, 0x64, 0x58, 0x57, 0x97, 0x6d, 0xec, 0xdd, 0x11, 0x90, 0x15, 0x7b, 0xf4, 0x0e,
	0xec, 0x5d, 0x93, 0x3f, 0xe4, 0x7b, 0xd4, 0xcc, 0x87, 0x9a, 0x81, 0x7e, 0x20, 0xb0, 0xfc, 0x38,
	0x0d, 0x79, 0xc4, 0x6b, 0x86, 0x0f, 0xc1, 0x9c, 0xc7, 0x79, 0x94, 0xd1, 0xd5, 0xe6, 0x55, 0xb5,
	0xba, 0xd4, 0xa2, 0xce, 0xf9, 0x50, 0x90, 0x6a, 0xbe, 0x4d, 0x08, 0x7b, 0xb0, 0x1f, 0x17, 0x39,
	0xaf, 0xa2, 0x58, 0x49, 0x74, 0x29, 0xd9, 0xc1, 0xc4, 0x25, 0x65, 0x94, 0xdf, 0x15, 0x0b, 0xa9,
	0x30, 0xd4, 0x25, 0x6d, 0x11, 0xf1, 0x56, 0xe3, 0x22, 0xbf, 0x49, 0xaa, 0x8c, 0x2e, 0xdc, 0x56,
	0x07, 0x75, 0xf7, 0xc8, 0x16, 0xc0, 0xcf, 0x40, 0x8f, 0xe2, 0xd4, 0x35, 0xe5, 0x30, 0xda, 0x8d,
	0x19, 0x12, 0x81, 0x7b, 0x01, 0x3c, 0xf4, 0x2f, 0xfb, 0xbe, 0x3a, 0x12, 0xa1, 0x9f, 0x6b, 0xca,
	0xf8, 0x5f, 0xf3, 0xb8, 0xf0, 0x7f, 0xb4, 0x58, 0x88, 0xc7, 0xb1, 0xca, 0xb2, 0x2e, 0xbd, 0x33,
	0xc0, 0x4d, 0x1b, 0x56, 0x16, 0x39, 0xa3, 0xff, 0xf4, 0x51, 0x52, 0x79, 0xb7, 0xc2, 0x47, 0x95,
	0xc7, 0xdf, 0xc0, 0xde, 0xfd, 0x79, 0xe0, 0x3d, 0x30, 0x86, 0x93, 0xab, 0x2b, 0xe7, 0x3f, 0x8c,
	0xc1, 0x0e, 0x2f, 0x3e, 0x0c, 0x67, 0xe3, 0x73, 0x12, 0x84, 0xe7, 0xa3, 0xab, 0xf7, 0x0e, 0xc2,
	0x36, 0x80, 0xc4, 0xfc, 0xcb, 0x30, 0x18, 0x3b, 0x1a, 0x3e, 0x00, 0x4b, 0xd6, 0xc4, 0x1f, 0x07,
	0x8e, 0x8e, 0xf7, 0x61, 0x4f, 0x96, 0xe1, 0x64, 0xe0, 0x18, 0x82, 0x3c, 0xf5, 0x67, 0x61, 0x40,
	0xa6, 0x01, 0x71, 0x5a, 0xc2, 0xef, 0x74, 0x34, 0x18, 0x4c, 0x86, 0x17, 0xe3, 0x4f, 0xb3, 0xe9,
	0x68, 0x1c, 0x38, 0xe6, 0x5c, 0xfd, 0x21, 0xbc, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x96,
	0x6f, 0xe0, 0x2b, 0x04, 0x00, 0x00,
}
